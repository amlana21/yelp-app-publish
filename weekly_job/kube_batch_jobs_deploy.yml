
apiVersion: v1
kind: Namespace
metadata:
  name: yelpapins

---
# secret to pull image
apiVersion: v1
kind: Secret
metadata:
  name: appregistrykey
  namespace: yelpapins
data:
  .dockerconfigjson: <base64_encoded_docker_creds>
type: kubernetes.io/dockerconfigjson

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-files-vol
  namespace: yelpapins
  labels:
    type: local
spec:
  storageClassName: normal
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-file-vol-claim
  namespace: yelpapins
spec:
  storageClassName: normal
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: weekly-model-job
  namespace: yelpapins
spec:
  schedule: "*/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
          - name: appregistrykey
          volumes:
            - name: data-files
              persistentVolumeClaim:
                claimName: data-file-vol-claim
          initContainers:
          - name: init-myservice
            image: amazon/aws-cli
            args: ["s3","cp","s3://yelpapisrcfiles",".","--recursive"]
            env:
            - name: AWS_ACCESS_KEY_ID
              value: <access_key>
            - name: AWS_SECRET_ACCESS_KEY
              value: <secret_key>
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            volumeMounts:
              - mountPath: "/aws"
                name: data-files
          containers:
          - name: weeklymodelprocess
            image: <image_name>
            env:
            - name: INPUTBUSINESSFILE
              value: "data_files/business_data_short_1.json"
            - name: INPUTREVIEWSFILE
              value: "data_files/review_short_1.json"
            - name: OUTPUTMODELFILE
              value: "data_files/yelp_model_nlpV1.sav"
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - mountPath: "/home/yelpbackendappmodel/data_files"
                name: data-files
          restartPolicy: OnFailure